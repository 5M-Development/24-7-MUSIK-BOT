const{Client,GatewayIntentBits}=require("discord.js");const{joinVoiceChannel,createAudioPlayer,createAudioResource}=require("@discordjs/voice");const{generateDependencyReport}=require("@discordjs/voice");const config=require("./config.json");console.log(generateDependencyReport());const client=new Client({intents:[GatewayIntentBits.Guilds,GatewayIntentBits.GuildVoiceStates]});client.login(require("./config.json").token);const Channels=require("./config.json").VC_channels;client.once("ready",async()=>{for(const channelId of Channels){joinChannel(channelId);await new Promise(res=>setTimeout(res,500))}function joinChannel(channelId){client.channels.fetch(channelId).then(channel=>{const VoiceConnection=joinVoiceChannel({channelId:channel.id,guildId:channel.guild.id,adapterCreator:channel.guild.voiceAdapterCreator});const resource=createAudioResource(config.musik_mp3,{inlineVolume:true});resource.volume.setVolume(.2);const player=createAudioPlayer();VoiceConnection.subscribe(player);player.play(resource);player.on("idle",()=>{try{player.stop()}catch(e){}try{VoiceConnection.destroy()}catch(e){}joinChannel(channel.id)})})["catch"](console.error)}});client.on("voiceStateUpdate",async(oldState,newState)=>{if(newState.channelId&&newState.channel.type==="GUILD_STAGE_VOICE"&&newState.guild.me.voice.suppress){try{await newState.guild.me.voice.setSuppressed(false)}catch(e){console.error(e)}}});